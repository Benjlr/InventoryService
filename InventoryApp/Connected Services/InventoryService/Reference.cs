//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventoryApp.InventoryService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InventoryService.IInventoryService")]
    public interface IInventoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItem", ReplyAction="http://tempuri.org/IInventoryService/GetItemResponse")]
        Inventory.Models.InventoryItem GetItem(Inventory.Models.InventoryItem composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItem", ReplyAction="http://tempuri.org/IInventoryService/GetItemResponse")]
        System.Threading.Tasks.Task<Inventory.Models.InventoryItem> GetItemAsync(Inventory.Models.InventoryItem composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/AddItem", ReplyAction="http://tempuri.org/IInventoryService/AddItemResponse")]
        void AddItem(Inventory.Models.InventoryItem composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/AddItem", ReplyAction="http://tempuri.org/IInventoryService/AddItemResponse")]
        System.Threading.Tasks.Task AddItemAsync(Inventory.Models.InventoryItem composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ViewItems", ReplyAction="http://tempuri.org/IInventoryService/ViewItemsResponse")]
        Inventory.Models.InventoryItem[] ViewItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/ViewItems", ReplyAction="http://tempuri.org/IInventoryService/ViewItemsResponse")]
        System.Threading.Tasks.Task<Inventory.Models.InventoryItem[]> ViewItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItems", ReplyAction="http://tempuri.org/IInventoryService/GetItemsResponse")]
        Inventory.Models.InventoryItem[] GetItems(Inventory.Models.InventoryItem[] composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetItems", ReplyAction="http://tempuri.org/IInventoryService/GetItemsResponse")]
        System.Threading.Tasks.Task<Inventory.Models.InventoryItem[]> GetItemsAsync(Inventory.Models.InventoryItem[] composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/AddItems", ReplyAction="http://tempuri.org/IInventoryService/AddItemsResponse")]
        void AddItems(Inventory.Models.InventoryItem[] composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/AddItems", ReplyAction="http://tempuri.org/IInventoryService/AddItemsResponse")]
        System.Threading.Tasks.Task AddItemsAsync(Inventory.Models.InventoryItem[] composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInventoryServiceChannel : InventoryApp.InventoryService.IInventoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryServiceClient : System.ServiceModel.ClientBase<InventoryApp.InventoryService.IInventoryService>, InventoryApp.InventoryService.IInventoryService {
        
        public InventoryServiceClient() {
        }
        
        public InventoryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InventoryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Inventory.Models.InventoryItem GetItem(Inventory.Models.InventoryItem composite) {
            return base.Channel.GetItem(composite);
        }
        
        public System.Threading.Tasks.Task<Inventory.Models.InventoryItem> GetItemAsync(Inventory.Models.InventoryItem composite) {
            return base.Channel.GetItemAsync(composite);
        }
        
        public void AddItem(Inventory.Models.InventoryItem composite) {
            base.Channel.AddItem(composite);
        }
        
        public System.Threading.Tasks.Task AddItemAsync(Inventory.Models.InventoryItem composite) {
            return base.Channel.AddItemAsync(composite);
        }
        
        public Inventory.Models.InventoryItem[] ViewItems() {
            return base.Channel.ViewItems();
        }
        
        public System.Threading.Tasks.Task<Inventory.Models.InventoryItem[]> ViewItemsAsync() {
            return base.Channel.ViewItemsAsync();
        }
        
        public Inventory.Models.InventoryItem[] GetItems(Inventory.Models.InventoryItem[] composite) {
            return base.Channel.GetItems(composite);
        }
        
        public System.Threading.Tasks.Task<Inventory.Models.InventoryItem[]> GetItemsAsync(Inventory.Models.InventoryItem[] composite) {
            return base.Channel.GetItemsAsync(composite);
        }
        
        public void AddItems(Inventory.Models.InventoryItem[] composite) {
            base.Channel.AddItems(composite);
        }
        
        public System.Threading.Tasks.Task AddItemsAsync(Inventory.Models.InventoryItem[] composite) {
            return base.Channel.AddItemsAsync(composite);
        }
    }
}
